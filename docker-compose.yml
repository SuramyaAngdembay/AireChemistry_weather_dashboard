version: '3.8'

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-info}

services:
  open-meteo-api:
    image: ghcr.io/open-meteo/open-meteo
    container_name: open-meteo-api
    ports:
      - "8081:8080"
    command: serve
    volumes:
      - data:/app/data
    restart: always
    environment:
      <<: *shared_environment

  open-meteo-sync:
    image: ghcr.io/open-meteo/open-meteo
    container_name: open-meteo-sync
    command: >
      sync ${OPEN_METEO_MODELS} ${OPEN_METEO_VARIABLES}
      --past-days ${OPEN_METEO_MAX_AGE_DAYS}
      --repeat-interval ${OPEN_METEO_REPEAT_INTERVAL}
      --concurrent ${OPEN_METEO_CONCURRENT}
    volumes:
      - data:/app/data
    restart: always
    environment:
      <<: *shared_environment

  batch-builder:
    build: ./batch-builder
    container_name: om-batch-builder
    depends_on:
      - open-meteo-sync
      - open-meteo-api
    volumes:
      - data:/data
    entrypoint: ["python", "build_grids.py"]

  satellite-fetcher:
    build: ./satellite-fetcher
    container_name: satellite-fetcher
    depends_on:
      - fastapi-processor
    volumes:
      - data:/data
    restart: always
    environment:
      <<: *shared_environment
      EUMETSAT_CONSUMER_KEY: ${EUMETSAT_CONSUMER_KEY}
      EUMETSAT_CONSUMER_SECRET: ${EUMETSAT_CONSUMER_SECRET}
    entrypoint: ["python", "fetch_satellite_data.py"]

  temp-frame-generator:
    build: ./temp-frame-generator
    container_name: temp-frame-generator
    depends_on:
      - batch-builder
    volumes:
      - data:/data
    entrypoint: ["python", "generate_temp_frames.py"]


  fastapi-processor:
    build: ./processor
    container_name: fastapi-processor
    ports:
      - "5000:5000"
    volumes:
      - data:/data
      - ./era5_rasters_bins:/data/era5_rasters_bins
      - ./interpolated_rasters:/data/interpolated_rasters
    restart: always
    environment:
      <<: *shared_environment
    

      



volumes:
  data:
