#extend("base"):
#export("header"):
<link rel="stylesheet"
  href="https://assets.open-meteo.com/libs/bootstrap-datepicker-1.9.0/bootstrap-datepicker3.min.css"
  integrity="sha512-rxThY3LYIfYsVCWPCW9dB0k+e3RZB39f23ylUYTEuZMDrN/vRqLdaCBo/FbvVT6uC2r0ObfPzotsfKF9Qc5W5g=="
  crossorigin="anonymous" referrerpolicy="no-referrer" />
<link rel="canonical" href="https://open-meteo.com/en/docs/ecmwf-api" />
#endexport
#export("content"):

<div class="px-4 py-5 text-center text-white" style="
            background-image: url('https://assets.open-meteo.com/images/mountains.webp');
            background-size: cover;
            background-position: center;
            height: 500px;
          ">
  <svg style="filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));" xmlns="http://www.w3.org/2000/svg" width="96"
    height="96" fill="currentColor" class="bi bi-gear-wide-connected mb-4" viewBox="0 0 16 16">
    <path
      d="M7.068.727c.243-.97 1.62-.97 1.864 0l.071.286a.96.96 0 0 0 1.622.434l.205-.211c.695-.719 1.888-.03 1.613.931l-.08.284a.96.96 0 0 0 1.187 1.187l.283-.081c.96-.275 1.65.918.931 1.613l-.211.205a.96.96 0 0 0 .434 1.622l.286.071c.97.243.97 1.62 0 1.864l-.286.071a.96.96 0 0 0-.434 1.622l.211.205c.719.695.03 1.888-.931 1.613l-.284-.08a.96.96 0 0 0-1.187 1.187l.081.283c.275.96-.918 1.65-1.613.931l-.205-.211a.96.96 0 0 0-1.622.434l-.071.286c-.243.97-1.62.97-1.864 0l-.071-.286a.96.96 0 0 0-1.622-.434l-.205.211c-.695.719-1.888.03-1.613-.931l.08-.284a.96.96 0 0 0-1.186-1.187l-.284.081c-.96.275-1.65-.918-.931-1.613l.211-.205a.96.96 0 0 0-.434-1.622l-.286-.071c-.97-.243-.97-1.62 0-1.864l.286-.071a.96.96 0 0 0 .434-1.622l-.211-.205c-.719-.695-.03-1.888.931-1.613l.284.08a.96.96 0 0 0 1.187-1.186l-.081-.284c-.275-.96.918-1.65 1.613-.931l.205.211a.96.96 0 0 0 1.622-.434l.071-.286zM12.973 8.5H8.25l-2.834 3.779A4.998 4.998 0 0 0 12.973 8.5zm0-1a4.998 4.998 0 0 0-7.557-3.779l2.834 3.78h4.723zM5.048 3.967c-.03.021-.058.043-.087.065l.087-.065zm-.431.355A4.984 4.984 0 0 0 3.002 8c0 1.455.622 2.765 1.615 3.678L7.375 8 4.617 4.322zm.344 7.646.087.065-.087-.065z" />
  </svg>
  <h1 class="display-5" style="text-shadow: 3px 3px 2px rgba(0, 0, 0, .7);">ECMWF Weather Forecast API</h1>
  <div class="col-lg-6 mx-auto">
    <p class="lead mb-4" style="text-shadow: 3px 3px 2px rgba(0, 0, 0, .7);">Global High Frequency Forecasts at 0.4°
      resolution</p>
    <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
      <a href="#api_form" class="btn button btn-primary btn-lg px-4 me-sm-3">URL Builder</a>
      <a href="#api-documentation" class="btn btn-outline-light btn-lg px-4">Parameter documentation</a>
    </div>
  </div>
</div>
<div class="mb-5" style="border-bottom: 1px solid #ddd">
  <div class="container px-4 py-1">
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
      <ol class="breadcrumb mb-0">
        <li class="breadcrumb-item"><a class="link-secondary" href="/en">Home</a></li>
        <li class="breadcrumb-item"><a class="link-secondary" href="/en/docs">Weather APIs</a></li>
        <li class="breadcrumb-item active" aria-current="page">ECMWF Weather Forecast API</li>
      </ol>
    </nav>
  </div>
</div>

<!-- http://127.0.0.1:8080/v1/forecast/query -->
<div class="container px-4 py-0" id="featured-3">
  <div class="alert alert-primary" role="alert">
    This API provides <a href="https://www.ecmwf.int/en/forecasts/datasets/open-data" target="_blank">open-data ECMWF IFS</a> weather forecasts for 10 days. 
    ECMWF IFS models run every 6 hours at 9 km resolution, but only 0.4° grid spacing (~44 km) is available as open data with a limited number of 
    weather variables at 3-hourly intervals. As soon as ECWMF includes additional data, they will be made
    available in this API.<br><br> For hourly and high-resolution data (up to 1 km) try our <a href="/en/docs">forecast API</a> which combines multiple models.
  </div>

  <form id="api_form" method="get" action="https://api.open-meteo.com/v1/ecmwf">
    <div class="row py-3 px-0">
      <h2>Select Coordinates or City</h2>
      <div class="col-md-3">
        <div class="form-floating">
          <input type="number" step="0.0001" class="form-control" name="latitude" id="latitude" value="52.52">
          <label for="latitude">Latitude</label>
        </div>
      </div>
      <div class="col-md-3">
        <div class="form-floating">
          <input type="number" step="0.0001" class="form-control" name="longitude" id="longitude" value="13.41">
          <label for="longitude">Longitude</label>
        </div>
      </div>
      <div class="col-md-6">
        <div class="input-group mb-3">
          <div class="form-floating dropdown">
            <input type="text" class="form-control" id="select_city" autocomplete="off" spellcheck="false" aria-label="Select city" data-bs-toggle="dropdown"/>
            <ul id="select_city_results" class="dropdown-menu" aria-labelledby="select_city">
              <li><span class="dropdown-item">Start typing to search for locations</span></li>
            </ul>
            <label for="select_city">Select city</label>
          </div>
          <button class="btn btn-outline-secondary" type="button" id="detect_gps">Detect GPS Position</button>
        </div>
      </div>
    </div>
    <div class="row py-3 px-0">
      <h2>3-Hourly Weather Variables</h2>
      <div class="col-md-3">

        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="temperature_2m" id="temperature_2m" name="hourly"
            checked>
          <label class="form-check-label" for="temperature_2m">
            Temperature (2 m)
          </label>
        </div>

        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="pressure_msl" id="pressure_msl" name="hourly">
          <label class="form-check-label" for="pressure_msl">
            Sealevel Pressure
          </label>
        </div>

        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="surface_air_pressure" id="surface_air_pressure"
            name="hourly">
          <label class="form-check-label" for="surface_air_pressure">
            Surface Air Pressure
          </label>
        </div>
      </div>

      <div class="col-md-3">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="precipitation" id="precipitation" name="hourly">
          <label class="form-check-label" for="precipitation">
            Precipitation (rain + showers + snow)
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="runoff" id="runoff" name="hourly">
          <label class="form-check-label" for="runoff">
            Surface water runoff
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="total_column_integrated_water_vapour"
            id="total_column_integrated_water_vapour" name="hourly">
          <label class="form-check-label" for="total_column_integrated_water_vapour">
            Total Column Integrated Water Vapour
          </label>
        </div>

      </div>

      <div class="col-md-3">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="windspeed_10m" id="windspeed_10m" name="hourly">
          <label class="form-check-label" for="windspeed_10m">
            Wind Speed (10 m)
          </label>
        </div>
        
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="winddirection_10m" id="winddirection_10m"
            name="hourly">
          <label class="form-check-label" for="winddirection_10m">
            Wind Direction (10 m)
          </label>
        </div>

      </div>
      <div class="col-md-3">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="skin_temperature" id="skin_temperature" name="hourly">
          <label class="form-check-label" for="skin_temperature">
            Skin Temperature
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="soil_temperature_0_to_7cm"
            id="soil_temperature_0_to_7cm" name="hourly">
          <label class="form-check-label" for="soil_temperature_0_to_7cm">
            Soil Temperature (0-7 cm)
          </label>
        </div>
      </div>
    </div>

    <div class="row py-3 px-0">
      <div class="accordion" id="accordionVariables">
        <div class="accordion-item">
          <h2 class="accordion-header" id="heading-pressure-levels">
            <button class="accordion-button collapsed py-2" type="button" data-bs-toggle="collapse"
              data-bs-target="#collapse-pressure-levels" aria-expanded="false" aria-controls="collapse-pressure-levels">
              Pressure Levels&nbsp;<span class="badge rounded-pill bg-secondary checkboxcounter"
                data-count-checkboxes-of="#collapse-pressure-levels">0/x
            </button>
          </h2>
          <div id="collapse-pressure-levels" class="accordion-collapse collapse"
            aria-labelledby="heading-pressure-levels" data-bs-parent="#accordionVariables">
            <div class="accordion-body">
              <div class="d-flex align-items-start">
                <div class="nav flex-column nav-pills me-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                  #for(variable in pressureVariables):
                  <button class="nav-link text-start text-nowrap #if(isFirst): active#endif"
                    id="v-pills-#(variable.name)-tab" data-bs-toggle="pill" data-bs-target="#v-pills-#(variable.name)"
                    type="button" role="tab" aria-controls="v-pills-#(variable.name)"
                    aria-selected="#(isFirst)">#(variable.label)</button>
                  #endfor
                </div>
                <div class="tab-content" id="v-pills-tabContent">
                  #for(variable in pressureVariables):
                  <div class="tab-pane fade #if(isFirst): show active#endif" id="v-pills-#(variable.name)"
                    role="tabpanel" aria-labelledby="v-pills-#(variable.name)-tab">
                    <div class="row">
                      #for(level in levels):
                      #if(index % (count(levels)/3+1) == 0 || isFirst):
                      <div class="col-lg-4">
                        #endif
                        <div class="form-check">
                          <input class="form-check-input" type="checkbox" value="#(variable.name)_#(level.level)hPa"
                            id="#(variable.name)_#(level.level)hPa" name="hourly">
                          <label class="form-check-label" for="#(variable.name)_#(level.level)hPa">
                            #(level.level) hPa <small class="text-muted">(#(level.altitude))</small>
                          </label>
                        </div>
                        #if(index % (count(levels)/3+1) == count(levels)/3 || isLast):
                      </div>
                      #endif
                      #endfor
                    </div>
                  </div>
                  #endfor
                  <div class="mt-3">
                    <small class="text-muted">Note: Altitudes are approximate and in meters <strong> above sea
                        level</strong> (not above ground). Use <mark>geopotential_height</mark> to get precise
                      altitudes above sea level.</small>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>


    <div class="row py-3 px-0">
      <h2>Settings</h2>
      <div class="col-3">
        <div class="form-floating mb-3">
          <select class="form-select" name="temperature_unit" id="temperature_unit" aria-label="Temperature Unit"
            data-default="celsius">
            <option selected value="celsius">Celsius °C</option>
            <option value="fahrenheit">Fahrenheit °F</option>
          </select>
          <label for="temperature_unit">Temperature Unit</label>
        </div>
      </div>
      <div class="col-3">
        <div class="form-floating mb-3">
          <select class="form-select" name="windspeed_unit" id="windspeed_unit" aria-label="Windspeed Unit"
            data-default="kmh">
            <option selected value="kmh">Km/h</option>
            <option value="ms">m/s</option>
            <option value="mph">Mph</option>
            <option value="kn">Knots</option>
          </select>
          <label for="windspeed_unit">Wind Speed Unit</label>
        </div>
      </div>
      <div class="col-3">
        <div class="form-floating mb-3">
          <select class="form-select" name="precipitation_unit" id="precipitation_unit" aria-label="Precipitation Unit"
            data-default="mm">
            <option selected value="mm">Millimeter</option>
            <option value="inch">Inch</option>
          </select>
          <label for="precipitation_unit">Precipitation Unit</label>
        </div>
      </div>
      <div class="col-3">
        <div class="form-floating mb-3">
          <select class="form-select" name="timeformat" id="timeformat" aria-label="Timeformat" data-default="iso8601">
            <option selected value="iso8601">ISO 8601 (e.g. 2022-12-31)</option>
            <option value="unixtime">Unix timestamp</option>
          </select>
          <label for="timeformat">Timeformat</label>
        </div>
      </div>
      <div class="col-3">
        <div class="form-floating mb-3">
          <select class="form-select" name="past_days" id="past_days" aria-label="Past days" data-default="0">
            <option selected value="0">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="5">5</option>
            <option value="7">1 week</option>
            <option value="14">2 weeks</option>
            <option value="31">1 month</option>
            <option value="61">2 months</option>
            <option value="92">3 months</option>
          </select>
          <label for="past_days">Past days</label>
        </div>
      </div>
      <div class="col-3">
        <div class="form-floating">
          <input type="text" class="form-control" data-provide="datepicker" data-date-format="yyyy-mm-dd"
            data-date-start-date="2022-06-08" value="" data-default="" name="start_date" id="start_date"><span
            class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
          <label for="start_date">Start date</label>
        </div>
      </div>
      <div class="col-3">
        <div class="form-floating">
          <input type="text" class="form-control" data-provide="datepicker" data-date-format="yyyy-mm-dd"
            data-date-start-date="2022-06-08" value="" data-default="" name="end_date" id="end_date"><span
            class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
          <label for="end_date">End date</label>
        </div>
      </div>
      <div class="col-12 pb-3 debug-hidden">
        <div class="form-check form-switch">
          <input class="form-check-input" type="checkbox" id="localhost" name="localhost" value="true">
          <label class="form-check-label" for="localhost">Use localhost server</label>
        </div>
      </div>
    </div>


    <div class="col-12">
      <button type="submit" class="btn btn-primary">Preview Chart</button>
      <button type="submit" class="btn btn-outline-primary" name="format" value="xlsx">Download XLSX</button>
      <button type="submit" class="btn btn-outline-primary" name="format" value="csv">Download CSV</button>
    </div>
  </form>



  <div class="col-12 my-4">
    <div id="container" style="height: 400px; width: 100%"></div>
  </div>

  <div class="col-12">
    <label for="api_url" class="form-label">API URL (<a id="api_url_link" target="_blank" href="#">Open in new
        tab</a>)</label>
    <input type="text" class="form-control" id="api_url" readonly>
    <div id="emailHelp" class="form-text">You can copy this API URL into your application</div>
  </div>

  <div class="col-12 py-5">
    <h2 id="api-documentation">API Documentation</h2>
    <p>The API endpoint <mark>/v1/ecmwf</mark> accepts a geographical coordinate, a list of weather variables and
      responds with a JSON hourly weather forecast for 7 days. Time always starts at 0:00 today and contains 168 hours.
      All URL parameters are listed below:</p>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th scope="col">Parameter</th>
            <th scope="col">Format</th>
            <th scope="col">Required</th>
            <th scope="col">Default</th>
            <th scope="col">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th scope="row">latitude, longitude</th>
            <td>Floating point</td>
            <td>Yes</td>
            <td></td>
            <td>Geographical WGS84 coordinate of the location</td>
          </tr>
          <tr>
            <th scope="row">hourly</th>
            <td>String array</td>
            <td>No</td>
            <td></td>
            <td>A list of weather variables which should be returned. Values can be comma separated, or multiple
              <mark>&hourly=</mark> parameter in the URL can be used.
            </td>
          </tr>
          <tr>
            <th scope="row">temperature_unit</th>
            <td>String</td>
            <td>No</td>
            <td><mark>celsius</mark></td>
            <td>If <mark>fahrenheit</mark> is set, all temperature values are converted to Fahrenheit.</td>
          </tr>
          <tr>
            <th scope="row">windspeed_unit</th>
            <td>String</td>
            <td>No</td>
            <td><mark>kmh</mark></td>
            <td>Other wind speed speed units: <mark>ms</mark>, <mark>mph</mark> and <mark>kn</mark></td>
          </tr>
          <tr>
            <th scope="row">precipitation_unit</th>
            <td>String</td>
            <td>No</td>
            <td><mark>mm</mark></td>
            <td>Other precipitation amount units: <mark>inch</mark></td>
          </tr>
          <tr>
            <th scope="row">timeformat</th>
            <td>String</td>
            <td>No</td>
            <td><mark>iso8601</mark></td>
            <td>If format <mark>unixtime</mark> is selected, all time values are returned in UNIX epoch time in seconds.
              Please note that all time is then in GMT+0! For daily values with unix timestamp, please apply
              <mark>utc_offset_seconds</mark> again to get the correct date.
            </td>
          </tr>
          <tr>
            <th scope="row">past_days</th>
            <td>Integer (0-2)</td>
            <td>No</td>
            <td><mark>0</mark></td>
            <td>If <mark>past_days</mark> is set, yesterday or the day before yesterday data are also returned.</td>
          </tr>
          <tr>
            <th scope="row">start_date<br />end_date</th>
            <td>String (yyyy-mm-dd)</td>
            <td>No</td>
            <td></td>
            <td>The time interval to get weather data. A day must be specified as an ISO8601 date (e.g.
              <mark>2022-06-30</mark>).
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    <p>Additional optional URL parameters will be added. For API stability, no required parameters will be added in the
      future!</p>


    <h3 class="mt-5">Hourly Parameter Definition</h3>
    <p>The parameter <mark>&hourly=</mark> accepts the following values. Most weather variables are given as an
      instantaneous value for the indicated hour. Some variables like precipitation are calculated from the preceding
      hour as and average or sum.</p>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th scope="col">Variable</th>
            <th scope="col">Valid time</th>
            <th scope="col">Unit</th>
            <th scope="col">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th scope="row">precipitation</th>
            <td>Preceding hour sum</td>
            <td>mm (inch)</td>
            <td>Total precipitation (rain, showers, snow) sum of the preceding hour</td>
          </tr>
          <tr>
            <th scope="row">runoff</th>
            <td>Preceding hour sum</td>
            <td>mm (inch)</td>
            <td>Execess rain that is not absorbed by the soil</td>
          </tr>
          <tr>
            <th scope="row">pressure_msl<br>surface_air_pressure</th>
            <td>Instant</td>
            <td>hPa</td>
            <td>Atmospheric air pressure reduced to sea level (Mean sea level) and actual pressure at surface level</td>
          </tr>
          <tr>
            <th scope="row">skin_temperature</th>
            <td>Instant</td>
            <td>°C (°F)</td>
            <td>Temperature of the the surface. Depending on the type of surface (e.g. concrete) this temperature can be
              significantly higher then the 2 meter air temperature</td>
          </tr>
          <tr>
            <th scope="row">soil_temperature_0_7cm</th>
            <td>Instant</td>
            <td>°C (°F)</td>
            <td>Average temperature of the first soil level 0-7 cm below ground.</td>
          </tr>
          <tr>
            <th scope="row">total_column_integrated_water_vapour</th>
            <td>Instant</td>
            <td>kg/m²</td>
            <td>Total amount of water in the atmosphere.</td>
          </tr>
          <tr>
            <th scope="row">temperature_2m<br>temperature_1000hPa, ...</th>
            <td>Instant</td>
            <td>°C (°F)</td>
            <td>Air temperature 2 meter above ground. Additional temperature in the atmopshere are given on different
              pressure levels. </td>
          </tr>
          <tr>
            <th scope="row">geopotential_height_1000hPa</th>
            <td>Instant</td>
            <td>meter</td>
            <td>Geopotential height on different atmospheric pressure levels</td>
          </tr>
          <tr>
            <th scope="row">windspeed_10m<br />windspeed_1000hPa, ...</th>
            <td>Instant</td>
            <td>km/h (mph, m/s, knots)</td>
            <td>Wind speed at 10 meters above ground. Wind speed on 10 meters is the standard level. Additional wind
              speeds are given on atmospheric pressure levels.</td>
          </tr>
          <tr>
            <th scope="row">winddirection_10m<br>winddirection_1000hPa, ...</th>
            <td>Instant</td>
            <td>°</td>
            <td>Wind direction at 10 meters above ground and different pressure levels.</td>
          </tr>
          <tr>
            <th scope="row">relative_humidity_1000hPa, ...</th>
            <td>Instant</td>
            <td>%</td>
            <td>Relative humidity at atmospheric pressure levels. Unfortunately, 2 meter relative humidity is unavailable.</td>
          </tr>
          <tr>
            <th scope="row">specific_humidity_1000hPa, ...</th>
            <td>Instant</td>
            <td>g/kg</td>
            <td>Specific humidity at different atmospheric pressure levels</td>
          </tr>
          <tr>
            <th scope="row">atmosphere_relative_vorticity_1000hPa, ...</th>
            <td>Instant</td>
            <td>s⁻¹</td>
            <td>Relative vorticity at different atmospheric pressure levels</td>
          </tr>
          <tr>
            <th scope="row">divergence_of_wind, ...</th>
            <td>Instant</td>
            <td>s⁻¹</td>
            <td>Differgence of wind at different atmospheric pressure levels</td>
          </tr>
        </tbody>
      </table>
    </div>

    <h3 class="mt-5">JSON Return Object</h3>
    <p>On success a JSON object will be returned.</p>
    <pre>
      <code>
{
  "latitude": 52.52,
  "longitude": 13.419,
  "generationtime_ms": 2.2119,
  "timezone": "Europe/Berlin",
  "timezone_abbreviation": "CEST",
  "hourly": {
    "time": ["2022-07-01T00:00", "2022-07-01T01:00", "2022-07-01T02:00", ...],
    "temperature_2m": [13, 12.7, 12.7, 12.5, 12.5, 12.8, 13, 12.9, 13.3, ...]
  },
  "hourly_units": {
    "temperature_2m": "°C"
  },
}
      </code>
    </pre>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th scope="col">Parameter</th>
            <th scope="col">Format</th>
            <th scope="col">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th scope="row">latitude, longitude</th>
            <td>Floating point</td>
            <td>WGS84 of the center of the weather grid-cell which was used to generate this forecast. This coordinate
              might be up to 5 km away.</td>
          </tr>
          <tr>
            <th scope="row">generationtime_ms</th>
            <td>Floating point</td>
            <td>Generation time of the weather forecast in milliseconds. This is mainly used for performance monitoring
              and improvements.</td>
          </tr>
          <tr>
            <th scope="row">utc_offset_seconds</th>
            <td>Integer</td>
            <td>Applied timezone offset from the <mark>&timezone=</mark> parameter.</td>
          </tr>
          <tr>
            <th scope="row">timezone<br />timezone_abbreviation</th>
            <td>String</td>
            <td>Timezone identifier (e.g. <mark>Europe/Berlin</mark>) and abbreviation (e.g. <mark>CEST</mark>)</td>
          </tr>
          <tr>
            <th scope="row">hourly</th>
            <td>Object</td>
            <td>For each selected weather variable, data will be returned as a floating point array. Additionally a
              <mark>time</mark> array will be returned with ISO8601 timestamps.
            </td>
          </tr>
          <tr>
            <th scope="row">hourly_units</th>
            <td>Object</td>
            <td>For each selected weather variable, the unit will be listed here.</td>
          </tr>
        </tbody>
      </table>
    </div>
    <h3 class="mt-5">Errors</h3>
    <p>In case an error occurs, for example a URL parameter is not correctly specified, a JSON error object is returned
      with a HTTP 400 status code.</p>
    <pre>
      <code>
{
  "error": true,
  "reason": "Cannot initialize WeatherVariable from invalid String value tempeture_2m for key hourly"
}
      </code>
    </pre>
  </div>

  This service is based on data and products of the European Centre for Medium-Range Weather Forecasts (ECMWF). Source
  www.ecmwf.int. ECMWF does not accept any liability whatsoever for any error or omission in the data, their
  availability, or for any loss or damage arising from their use.

  <!--<div class=col-12>
      <h1>Docs</h1>
      <div id="swagger-ui">
      </div>
    </div>-->
</div>

<!--<link type="text/css" rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swagger-ui-dist@3.30.0/swagger-ui.css">
    <script src="https://cdn.jsdelivr.net/npm/swagger-ui-dist@3.30.0/swagger-ui-bundle.js"></script>
    <script>
        const ui = SwaggerUIBundle({
            url: '/docs/openapi.yml',
        oauth2RedirectUrl: window.location.origin + '/docs/oauth2-redirect',
            dom_id: '#swagger-ui',
            presets: [
                SwaggerUIBundle.presets.apis,
                SwaggerUIBundle.SwaggerUIStandalonePreset
            ],
            layout: "BaseLayout",
            deepLinking: true,
            showExtensions: true,
            showCommonExtensions: true
        })
    </script>-->
#endexport

#export("footer"):
<script src="https://assets.open-meteo.com/libs/highstock-10.3.1/highstock.js"
  integrity="sha512-FpTlH4AK/Pw9x4jCRet+EKF+8l2iWK9vJ4gjAfDhWFCHq/rfitKEvPphq8mFx4DoMKCXe/jpRpKta423ymyNLA=="
  crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="/scripts/weather.js"></script>
<script src="https://assets.open-meteo.com/libs/bootstrap-datepicker-1.9.0/bootstrap-datepicker.min.js"
  integrity="sha512-T/tUfKSV1bihCnd+MxKD0Hm1uBBroVYBOYSk1knyvQ9VyZJpc/ALb4P0r6ubwVPSGB2GvjeoMAJJImBG12TiaQ=="
  crossorigin="anonymous" referrerpolicy="no-referrer"></script>
#endexport

#endextend